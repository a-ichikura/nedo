#! /usr/bin/env python                                                                               
# -*- encoding: UTF-8 -*-

import random
import requests
import json
from naoqi import ALProxy
import time
import re
import motion
import qi
import argparse
import sys


class Animation(object):
    def __init__(self):
        self.NAO_IP = "192.168.10.105"
        self.PORT = 9559
        try:
            self.motion = ALProxy("ALMotion",self.NAO_IP,self.PORT)
        except Exception, e:
            print "Error:"
            print str(e)
            exit(1)

    def q_motion(self,num):
        if num == 1:
            names,times,keys = Question().motion_1()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 2:
            names,times,keys = Question().motion_2()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 3:
            names,times,keys = Question().motion_3()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 4:
            names,times,keys = Question().motion_4()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 5:
            names,times,keys = Question().motion_5()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 6:
            names,times,keys = Question().motion_6()
            self.motion.angleInterpolationBezier(names, times, keys)

    def a_motion(self,num):
        if num == 1:
            names,times,keys = Affirmation().motion_1()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 2:
            names,times,keys = Affirmation().motion_2()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 3:
            names,times,keys = Affirmation().motion_3()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 4:
            names,times,keys = Affirmation().motion_4()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 5:
            names,times,keys = Affirmation().motion_5()
            self.motion.angleInterpolationBezier(names, times, keys)
        elif num == 6:
            names,times,keys = Affirmation().motion_6()
            self.motion.angleInterpolationBezier(names, times, keys)

    def s_motion(self,num):
        if num == 1:
            names,times,keys = Space().motion_1()
            self.motion.angleInterpolationBezier(names,times,keys)
        elif num == 2:
            names,times,keys = Space().motion_2()
            self.motion.angleInterpolationBezier(names,times,keys)

        


class Question(object):
    def __init__(self):
        pass

    def motion_1(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.28, 0.48, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0506146, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.150098, [3, -0.0666667, 0], [3, 0.0533333, 0]], [-0.132645, [3, -0.0533333, 0], [3, 0.0933333, 0]], [0.164061, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.038392, [3, -0.146667, 0.021936], [3, 0.133333, -0.0199418]], [-0.0583338, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0245859, [3, -0.106667, 0], [3, 0.12, 0]], [-0.10282, [3, -0.12, 0.0224348], [3, 0.0933333, -0.0174493]], [-0.144238, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.0951499, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.0951499, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.0106959, [3, -0.106667, 0], [3, 0.12, 0]], [0.0199001, [3, -0.12, -0.00891639], [3, 0.0933333, 0.00693497]], [0.05825, [3, -0.0933333, -0.0139196], [3, 0.146667, 0.0218737]], [0.12728, [3, -0.146667, -0.0155348], [3, 0.133333, 0.0141225]], [0.147222, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0383082, [3, -0.106667, 0], [3, 0.12, 0]], [0.00310993, [3, -0.12, -0.0120803], [3, 0.0933333, 0.00939577]], [0.0261199, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.0383082, [3, -0.146667, 0.00843683], [3, 0.133333, -0.00766985]], [-0.0459781, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-1.42811, [3, -0.106667, 0], [3, 0.12, 0]], [-0.623083, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.737812, [3, -0.0933333, 0.0542451], [3, 0.146667, -0.0852422]], [-1.04154, [3, -0.146667, 0.0653533], [3, 0.133333, -0.0594121]], [-1.11211, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-1.18429, [3, -0.106667, 0], [3, 0.12, 0]], [-1.19503, [3, -0.12, 0.0107391], [3, 0.0933333, -0.00835261]], [-1.25025, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.971065, [3, -0.146667, -0.0455603], [3, 0.133333, 0.0414184]], [-0.929646, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.0984, [3, -0.106667, 0], [3, 0.12, 0]], [0.84, [3, -0.12, 0], [3, 0.0933333, 0]], [0.7, [3, -0.0933333, 0.0523704], [3, 0.146667, -0.0822963]], [0.436, [3, -0.146667, 0.0553841], [3, 0.133333, -0.0503492]], [0.3828, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.446436, [3, -0.106667, 0], [3, 0.12, 0]], [0.216335, [3, -0.12, 0], [3, 0.0933333, 0]], [0.296104, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.237812, [3, -0.146667, 0.0125885], [3, 0.133333, -0.0114441]], [0.224006, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.0598679, [3, -0.106667, 0], [3, 0.12, 0]], [0.00157595, [3, -0.12, 0.0140936], [3, 0.0933333, -0.0109617]], [-0.0152981, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.0690719, [3, -0.146667, -0.0182132], [3, 0.133333, 0.0165575]], [0.0890141, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.315962, [3, -0.106667, 0], [3, 0.12, 0]], [-0.346642, [3, -0.12, 0.00591742], [3, 0.0933333, -0.00460244]], [-0.351244, [3, -0.0933333, 0.000994355], [3, 0.146667, -0.00156256]], [-0.354312, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.34971, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0813439, [3, -0.106667, 0], [3, 0.12, 0]], [0.0398422, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.073674, [3, -0.0933333, 0.000976164], [3, 0.146667, -0.00153397]], [-0.075208, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.0706061, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[1.07222, [3, -0.106667, 0], [3, 0.12, 0]], [0.855211, [3, -0.12, 0], [3, 0.0933333, 0]], [0.89428, [3, -0.0933333, -0.0390692], [3, 0.146667, 0.0613944]], [1.20261, [3, -0.146667, 0], [3, 0.133333, 0]], [1.18881, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.0260359, [3, -0.106667, 0], [3, 0.12, 0]], [-4.19617e-05, [3, -0.12, 0], [3, 0.0933333, 0]], [0.00149202, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.00924586, [3, -0.146667, 0.00562467], [3, 0.133333, -0.00511333]], [-0.030722, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.918909, [3, -0.106667, 0], [3, 0.12, 0]], [-0.90817, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.918909, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.101286, [3, -0.146667, -0.185882], [3, 0.133333, 0.168984]], [0.145688, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0398422, [3, -0.106667, 0], [3, 0.12, 0]], [-0.0444441, [3, -0.12, 0], [3, 0.0933333, 0]], [0.0445281, [3, -0.0933333, -0.0157093], [3, 0.146667, 0.0246861]], [0.0767419, [3, -0.146667, -0.0077674], [3, 0.133333, 0.00706127]], [0.0890141, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.131966, [3, -0.106667, 0], [3, 0.12, 0]], [0.14117, [3, -0.12, -0.0034515], [3, 0.0933333, 0.0026845]], [0.150374, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.0813439, [3, -0.146667, 0.0160705], [3, 0.133333, -0.0146095]], [0.0583338, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.874422, [3, -0.106667, 0], [3, 0.12, 0]], [0.898967, [3, -0.12, -0.00977919], [3, 0.0933333, 0.00760604]], [0.926578, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.733295, [3, -0.146667, 0.0269991], [3, 0.133333, -0.0245446]], [0.70875, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[1.38363, [3, -0.106667, 0], [3, 0.12, 0]], [1.50788, [3, -0.12, -0.03394], [3, 0.0933333, 0.0263978]], [1.56464, [3, -0.0933333, 0], [3, 0.146667, 0]], [1.53396, [3, -0.146667, 0], [3, 0.133333, 0]], [1.53549, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.5008, [3, -0.106667, 0], [3, 0.12, 0]], [0.28, [3, -0.12, 0.06765], [3, 0.0933333, -0.0526167]], [0.14, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.1532, [3, -0.146667, 0], [3, 0.133333, 0]], [0.1532, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[0.48398, [3, -0.106667, 0], [3, 0.12, 0]], [0.220854, [3, -0.12, 0], [3, 0.0933333, 0]], [0.322099, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.292952, [3, -0.146667, 0.00337512], [3, 0.133333, -0.00306829]], [0.289883, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.205514, [3, -0.106667, 0], [3, 0.12, 0]], [-0.18097, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.205514, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.095066, [3, -0.146667, -0.0185614], [3, 0.133333, 0.016874]], [-0.078192, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.315962, [3, -0.106667, 0], [3, 0.12, 0]], [-0.346642, [3, -0.12, 0.00591742], [3, 0.0933333, -0.00460244]], [-0.351244, [3, -0.0933333, 0.000994355], [3, 0.146667, -0.00156256]], [-0.354312, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.34971, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0904641, [3, -0.106667, 0], [3, 0.12, 0]], [0.0813439, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.0827939, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.0735901, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.076658, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[1.80863, [3, -0.106667, 0], [3, 0.12, 0]], [1.81783, [3, -0.12, -0.00632572], [3, 0.0933333, 0.00492001]], [1.84237, [3, -0.0933333, 0], [3, 0.146667, 0]], [1.8071, [3, -0.146667, 0], [3, 0.133333, 0]], [1.81783, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.119694, [3, -0.106667, 0], [3, 0.12, 0]], [-0.145772, [3, -0.12, 0.00690299], [3, 0.0933333, -0.005369]], [-0.15651, [3, -0.0933333, 0.00278394], [3, 0.146667, -0.00437476]], [-0.167248, [3, -0.146667, 0.0072316], [3, 0.133333, -0.00657419]], [-0.197927, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.28, 0.64, 0.92, 1.36, 1.76])
	keys.append([[-0.0767419, [3, -0.106667, 0], [3, 0.12, 0]], [-0.0767419, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.0767419, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.0767419, [3, -0.146667, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0, 0]]])
		
	return names,times,keys

    def motion_2(self):
        # Choregraphe bezier export in Python.
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.24, 0.44, 0.68, 1.6])
	keys.append([[-0.062936, [3, -0.0933333, 0], [3, 0.0666667, 0]], [0.113446, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.062936, [3, -0.08, 0], [3, 0.306667, 0]], [-0.062936, [3, -0.306667, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([1.48])
	keys.append([[-0.122762, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([1.48])
	keys.append([[-0.200912, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.56, 1.04, 1.36])
	keys.append([[-1.53065, [3, -0.2, 0], [3, 0.16, 0]], [-1.26362, [3, -0.16, 0], [3, 0.106667, 0]], [-1.50174, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([1.04, 1.36])
	keys.append([[-1.34689, [3, -0.36, 0], [3, 0.106667, 0]], [-1.17815, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([1.04, 1.36])
	keys.append([[0.3036, [3, -0.36, 0], [3, 0.106667, 0]], [0.3036, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([1.48])
	keys.append([[0.115092, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([1.48])
	keys.append([[0.220938, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([1.48])
	keys.append([[-0.25767, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([1.48])
	keys.append([[0.214717, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([1.04, 1.36])
	keys.append([[1.54623, [3, -0.36, 0], [3, 0.106667, 0]], [1.54623, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.56, 1.04, 1.36])
	keys.append([[0.469494, [3, -0.2, 0], [3, 0.16, 0]], [0.151824, [3, -0.16, 0], [3, 0.106667, 0]], [0.190175, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([1.04, 1.36])
	keys.append([[-0.550747, [3, -0.36, 0], [3, 0.106667, 0]], [-0.227074, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([1.48])
	keys.append([[-0.151824, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([1.48])
	keys.append([[-0.128814, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.52, 1.2, 1.48])
	keys.append([[1.54462, [3, -0.186667, 0], [3, 0.226667, 0]], [1.0664, [3, -0.226667, 0], [3, 0.0933333, 0]], [1.54462, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.92, 1.48])
	keys.append([[1.65975, [3, -0.32, 0], [3, 0.186667, 0]], [0.799361, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.52, 0.92, 1.2, 1.48])
	keys.append([[0.25, [3, -0.186667, 0], [3, 0.133333, 0]], [1, [3, -0.133333, 0], [3, 0.0933333, 0]], [0.37, [3, -0.0933333, 0.135], [3, 0.0933333, -0.135]], [0.19, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([1.48])
	keys.append([[0.136484, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([1.48])
	keys.append([[0.170316, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([1.48])
	keys.append([[-0.25767, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([1.48])
	keys.append([[0.205598, [3, -0.506667, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.52, 1.48])
	keys.append([[1.06465, [3, -0.186667, 0], [3, 0.32, 0]], [1.55398, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.92, 1.48])
	keys.append([[-0.01845, [3, -0.32, 0], [3, 0.186667, 0]], [0.21293, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.92, 1.48])
	keys.append([[1.66588, [3, -0.32, 0], [3, 0.186667, 0]], [0.0506146, [3, -0.186667, 0], [3, 0, 0]]])
        return names,times,keys

    def motion_3(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("LAnklePitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[0.22554, [3, -0.186667, 0], [3, 0.186667, 0]], [0.108956, [3, -0.186667, 0.017259], [3, 0.2, -0.0184918]], [0.0904641, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.151908, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.217869, [3, -0.186667, 0], [3, 0.2, 0]], [-0.091998, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.52, 0.84, 1.08, 1.68])
	keys.append([[-0.417291, [3, -0.186667, 0], [3, 0.106667, 0]], [-0.79587, [3, -0.106667, 0.140926], [3, 0.08, -0.105695]], [-1.15715, [3, -0.08, 0], [3, 0.2, 0]], [-0.360533, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.84, 1.68])
	keys.append([[-2.08567, [3, -0.293333, 0], [3, 0.28, 0]], [-1.34565, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.84, 1.68])
	keys.append([[0.6724, [3, -0.293333, 0], [3, 0.28, 0]], [0.3136, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.170316, [3, -0.186667, 0], [3, 0.186667, 0]], [0.12728, [3, -0.186667, -0.00437347], [3, 0.2, 0.00468586]], [0.131966, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.52, 1.08, 1.68])
	keys.append([[0.128814, [3, -0.186667, 0], [3, 0.186667, 0]], [0.245399, [3, -0.186667, 0], [3, 0.2, 0]], [0.04913, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.226991, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.176367, [3, -0.186667, 0], [3, 0.2, 0]], [-0.177901, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.0889301, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.0889301, [3, -0.186667, 0], [3, 0.2, 0]], [-0.0874801, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.84, 1.68])
	keys.append([[1.00788, [3, -0.293333, 0], [3, 0.28, 0]], [1.40979, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.84, 1.08, 1.68])
	keys.append([[0.127364, [3, -0.293333, 0], [3, 0.08, 0]], [0.165806, [3, -0.08, 0], [3, 0.2, 0]], [0.0767419, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.84, 1.68])
	keys.append([[-1.35601, [3, -0.293333, 0], [3, 0.28, 0]], [-1.00531, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[0.196309, [3, -0.186667, 0], [3, 0.186667, 0]], [0.0858622, [3, -0.186667, 0], [3, 0.2, 0]], [0.092082, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.52, 1.08, 1.68])
	keys.append([[0.076658, [3, -0.186667, 0], [3, 0.186667, 0]], [0.0275701, [3, -0.186667, 0], [3, 0.2, 0]], [0.165714, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.52, 0.84, 1.08, 1.68])
	keys.append([[0.42641, [3, -0.186667, 0], [3, 0.106667, 0]], [0.551524, [3, -0.106667, -0.102288], [3, 0.08, 0.0767159]], [0.963422, [3, -0.08, 0], [3, 0.2, 0]], [0.461692, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.84, 1.68])
	keys.append([[1.92061, [3, -0.293333, 0], [3, 0.28, 0]], [1.34565, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.84, 1.68])
	keys.append([[0.6692, [3, -0.293333, 0], [3, 0.28, 0]], [0.504, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.148756, [3, -0.186667, 0], [3, 0.186667, 0]], [0.1335, [3, -0.186667, 0], [3, 0.2, 0]], [0.12728, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.00310993, [3, -0.186667, 0], [3, 0.186667, 0]], [0.0429101, [3, -0.186667, 0], [3, 0.2, 0]], [-0.164096, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.226991, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.176367, [3, -0.186667, 0], [3, 0.2, 0]], [-0.177901, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.52, 1.08, 1.68])
	keys.append([[-0.0828778, [3, -0.186667, 0], [3, 0.186667, 0]], [-0.0828778, [3, -0.186667, 0], [3, 0.2, 0]], [-0.0873961, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.84, 1.68])
	keys.append([[0.875873, [3, -0.293333, 0], [3, 0.28, 0]], [1.31613, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.84, 1.68])
	keys.append([[-0.0137641, [3, -0.293333, 0], [3, 0.28, 0]], [-0.0643861, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.84, 1.68])
	keys.append([[1.55092, [3, -0.293333, 0], [3, 0.28, 0]], [1.00531, [3, -0.28, 0], [3, 0, 0]]])
        return names,times,keys

    def motion_4(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.4, 1.08])
	keys.append([[0, [3, -0.146667, 0], [3, 0.226667, 0]], [-0.150374, [3, -0.226667, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([1.08])
	keys.append([[-0.0506639, [3, -0.373333, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.4, 1.12])
	keys.append([[-0.0907571, [3, -0.146667, 0], [3, 0.24, 0]], [0.093532, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([1.12])
	keys.append([[-0.122678, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.36, 1, 1.24])
	keys.append([[-0.579811, [3, -0.133333, 0], [3, 0.213333, 0]], [-1.54462, [3, -0.213333, 0], [3, 0.08, 0]], [-1.44805, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.36, 0.72, 1.24])
	keys.append([[-1.7396, [3, -0.133333, 0], [3, 0.12, 0]], [-1.70738, [3, -0.12, 0], [3, 0.173333, 0]], [-1.87305, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.36, 0.72, 1, 1.24])
	keys.append([[0.5952, [3, -0.133333, 0], [3, 0.12, 0]], [0.5872, [3, -0.12, 0.00800002], [3, 0.0933333, -0.00622224]], [0.45, [3, -0.0933333, 0], [3, 0.08, 0]], [0.77, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.4, 1.12])
	keys.append([[-0.217786, [3, -0.146667, 0], [3, 0.24, 0]], [0.131966, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([1.12])
	keys.append([[0.10282, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.4, 1.12])
	keys.append([[-0.193243, [3, -0.146667, 0], [3, 0.24, 0]], [-0.161028, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.4, 1.12])
	keys.append([[0.418739, [3, -0.146667, 0], [3, 0.24, 0]], [-0.0844118, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.28, 0.64, 1.16])
	keys.append([[1.57077, [3, -0.106667, 0], [3, 0.12, 0]], [1.21475, [3, -0.12, 0], [3, 0.173333, 0]], [1.68429, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.28, 0.64, 1.16])
	keys.append([[0.122678, [3, -0.106667, 0], [3, 0.12, 0]], [0.0275701, [3, -0.12, 0.0286579], [3, 0.173333, -0.0413948]], [-0.0874801, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.36, 0.72, 1.24])
	keys.append([[-1.26559, [3, -0.133333, 0], [3, 0.12, 0]], [-1.3561, [3, -0.12, 0], [3, 0.173333, 0]], [-1.07998, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.4, 1.12])
	keys.append([[-0.0907571, [3, -0.146667, 0], [3, 0.24, 0]], [0.099752, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([1.12])
	keys.append([[0.127364, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.4, 1.04, 1.28])
	keys.append([[0.480184, [3, -0.146667, 0], [3, 0.213333, 0]], [1.54462, [3, -0.213333, 0], [3, 0.08, 0]], [1.40672, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.4, 0.76, 1.28])
	keys.append([[1.61526, [3, -0.146667, 0], [3, 0.12, 0]], [1.59839, [3, -0.12, 0], [3, 0.173333, 0]], [1.79013, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.4, 0.76, 1.04, 1.28])
	keys.append([[0.5484, [3, -0.146667, 0], [3, 0.12, 0]], [0.5412, [3, -0.12, 0.0072], [3, 0.0933333, -0.0056]], [0.45, [3, -0.0933333, 0], [3, 0.08, 0]], [0.77, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.4, 1.12])
	keys.append([[-0.268493, [3, -0.146667, 0], [3, 0.24, 0]], [0.136484, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([1.12])
	keys.append([[-0.105804, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.4, 1.12])
	keys.append([[-0.193243, [3, -0.146667, 0], [3, 0.24, 0]], [-0.161028, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.4, 1.12])
	keys.append([[0.434165, [3, -0.146667, 0], [3, 0.24, 0]], [-0.0827939, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.32, 0.68, 1.2])
	keys.append([[1.52177, [3, -0.12, 0], [3, 0.12, 0]], [1.21475, [3, -0.12, 0], [3, 0.173333, 0]], [1.735, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.32, 0.68, 1.2])
	keys.append([[-0.099752, [3, -0.12, 0], [3, 0.12, 0]], [-0.039926, [3, -0.12, -0.0292855], [3, 0.173333, 0.0423012]], [0.115008, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.4, 0.76, 1.28])
	keys.append([[1.50635, [3, -0.146667, 0], [3, 0.12, 0]], [1.5447, [3, -0.12, 0], [3, 0.173333, 0]], [1.30232, [3, -0.173333, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_5(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.48, 0.68, 0.88, 1.32])
	keys.append([[0.141086, [3, -0.173333, 0], [3, 0.0666667, 0]], [-0.106465, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.232129, [3, -0.0666667, 0], [3, 0.146667, 0]], [0.0275701, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.48, 0.88, 1.32])
	keys.append([[0.022968, [3, -0.173333, 0], [3, 0.133333, 0]], [0.061318, [3, -0.133333, 0], [3, 0.146667, 0]], [0.030638, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.05825, [3, -0.146667, 0], [3, 0.146667, 0]], [-4.19617e-05, [3, -0.146667, 0], [3, 0.16, 0]], [0.0812599, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.4, 0.84, 1.32])
	keys.append([[-0.148756, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.217786, [3, -0.146667, 0.0042189], [3, 0.16, -0.00460244]], [-0.222388, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.56, 0.92, 1.28])
	keys.append([[-0.530721, [3, -0.2, 0], [3, 0.12, 0]], [-0.748551, [3, -0.12, 0], [3, 0.12, 0]], [-0.546061, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.56, 0.92, 1.28])
	keys.append([[-1.37911, [3, -0.2, 0], [3, 0.12, 0]], [-1.893, [3, -0.12, 0], [3, 0.12, 0]], [-1.2932, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.56, 0.92, 1.28])
	keys.append([[0.18, [3, -0.2, 0], [3, 0.12, 0]], [0.56, [3, -0.12, 0], [3, 0.12, 0]], [0.3068, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.0874801, [3, -0.146667, 0], [3, 0.146667, 0]], [0.440299, [3, -0.146667, 0], [3, 0.16, 0]], [0.309909, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.170316, [3, -0.146667, 0], [3, 0.146667, 0]], [0.273093, [3, -0.146667, -0.0207868], [3, 0.16, 0.0226766]], [0.300706, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[-0.205514, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.222388, [3, -0.146667, 0.00366833], [3, 0.16, -0.00400181]], [-0.228525, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.030638, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.090548, [3, -0.146667, 0], [3, 0.16, 0]], [-0.0813439, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.56, 0.92, 1.28])
	keys.append([[1.38976, [3, -0.2, 0], [3, 0.12, 0]], [1.3238, [3, -0.12, 0], [3, 0.12, 0]], [1.41891, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.56, 0.92, 1.28])
	keys.append([[0.0889301, [3, -0.2, 0], [3, 0.12, 0]], [0.144154, [3, -0.12, 0], [3, 0.12, 0]], [0.0383082, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.56, 0.92, 1.28])
	keys.append([[-0.213269, [3, -0.2, 0], [3, 0.12, 0]], [-1.16742, [3, -0.12, 0], [3, 0.12, 0]], [-0.105888, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.030722, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.0367741, [3, -0.146667, 0], [3, 0.16, 0]], [-0.0183661, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.0123138, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.030638, [3, -0.146667, 0.0112493], [3, 0.16, -0.012272]], [-0.05825, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.48, 0.8, 1.36])
	keys.append([[0.70108, [3, -0.173333, 0], [3, 0.106667, 0]], [0.980268, [3, -0.106667, 0], [3, 0.186667, 0]], [0.748635, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.48, 0.8, 1.36])
	keys.append([[1.42351, [3, -0.173333, 0], [3, 0.106667, 0]], [1.94506, [3, -0.106667, 0], [3, 0.186667, 0]], [1.14279, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.48, 0.8, 1.36])
	keys.append([[0.18, [3, -0.173333, 0], [3, 0.106667, 0]], [0.56, [3, -0.106667, 0], [3, 0.186667, 0]], [0.3068, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.0858622, [3, -0.146667, 0], [3, 0.146667, 0]], [0.477032, [3, -0.146667, 0], [3, 0.16, 0]], [0.381923, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.0107799, [3, -0.146667, 0], [3, 0.146667, 0]], [0.0552659, [3, -0.146667, -0.0129612], [3, 0.16, 0.0141395]], [0.092082, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[-0.205514, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.222388, [3, -0.146667, 0.00366833], [3, 0.16, -0.00400181]], [-0.228525, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.4, 0.84, 1.32])
	keys.append([[0.0506639, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.0827939, [3, -0.146667, 0], [3, 0.16, 0]], [-0.078192, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.48, 0.8, 1.36])
	keys.append([[1.43433, [3, -0.173333, 0], [3, 0.106667, 0]], [1.40979, [3, -0.106667, 0], [3, 0.186667, 0]], [1.51103, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.48, 0.8, 1.36])
	keys.append([[-0.0276539, [3, -0.173333, 0], [3, 0.106667, 0]], [-0.00617791, [3, -0.106667, 0], [3, 0.186667, 0]], [-0.047596, [3, -0.186667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.48, 0.8, 1.36])
	keys.append([[0.075124, [3, -0.173333, 0], [3, 0.106667, 0]], [0.944902, [3, -0.106667, 0], [3, 0.186667, 0]], [0.14262, [3, -0.186667, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_6(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.36, 0.6, 0.96])
	keys.append([[-0.247016, [3, -0.133333, 0], [3, 0.08, 0]], [0.113446, [3, -0.08, 0], [3, 0.12, 0]], [-0.247016, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.36, 0.96])
	keys.append([[-0.177985, [3, -0.133333, 0], [3, 0.2, 0]], [-0.177985, [3, -0.2, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.4, 0.72, 1.12])
	keys.append([[-1.19555, [3, -0.146667, 0], [3, 0.106667, 0]], [-0.925025, [3, -0.106667, 0], [3, 0.133333, 0]], [-0.992455, [2, -0.13148, 0.0667632], [2, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([1.12])
	keys.append([[-0.914306, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.4, 0.72, 1.12])
	keys.append([[0.19, [3, -0.146667, 0], [3, 0.106667, 0]], [0.55, [3, -0.106667, 0], [3, 0.133333, 0]], [0.1956, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([1.12])
	keys.append([[1.24617, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.72, 1.12])
	keys.append([[0.0925025, [3, -0.253333, 0], [3, 0.133333, 0]], [-0.0820305, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.72, 1.12])
	keys.append([[-0.904081, [3, -0.253333, 0], [3, 0.133333, 0]], [0.0137641, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.4, 0.72, 1.12])
	keys.append([[1.19555, [3, -0.146667, 0], [3, 0.106667, 0]], [0.925025, [3, -0.106667, 0], [3, 0.133333, 0]], [1.03856, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([1.12])
	keys.append([[0.777696, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.4, 0.72, 1.12])
	keys.append([[0.19, [3, -0.146667, 0], [3, 0.106667, 0]], [0.55, [3, -0.106667, 0], [3, 0.133333, 0]], [0.2052, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([1.12])
	keys.append([[1.24617, [3, -0.386667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.72, 1.12])
	keys.append([[-0.0925025, [3, -0.253333, 0], [3, 0.133333, 0]], [0.0820305, [3, -0.133333, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.72, 1.12])
	keys.append([[0.904081, [3, -0.253333, 0], [3, 0.133333, 0]], [0.308291, [3, -0.133333, 0], [3, 0, 0]]])
        return names,times,keys


class Affirmation(object):
    def __init__(self):
        pass

    def motion_1(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.36, 0.64, 0.96])
	keys.append([[-0.113446, [3, -0.133333, 0], [3, 0.0933333, 0]], [0.265341, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.113446, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.36, 0.64, 0.96])
	keys.append([[0, [3, -0.133333, 0], [3, 0.0933333, 0]], [-0.0245859, [3, -0.0933333, 0], [3, 0.106667, 0]], [0, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.32, 0.84])
	keys.append([[-0.18719, [3, -0.12, 0], [3, 0.173333, 0]], [-0.116626, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.32, 0.84])
	keys.append([[-0.049046, [3, -0.12, 0], [3, 0.173333, 0]], [0.0245859, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.32, 0.84])
	keys.append([[-1.29772, [3, -0.12, 0], [3, 0.173333, 0]], [-1.42827, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.32, 0.84])
	keys.append([[-1.42973, [3, -0.12, 0], [3, 0.173333, 0]], [-0.9753, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.32, 0.84])
	keys.append([[0.68, [3, -0.12, 0], [3, 0.173333, 0]], [0.35, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.32, 0.84])
	keys.append([[-0.00455999, [3, -0.12, 0], [3, 0.173333, 0]], [0.032256, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.32, 0.84])
	keys.append([[0.0337899, [3, -0.12, 0], [3, 0.173333, 0]], [-0.032172, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.32, 0.84])
	keys.append([[-0.184038, [3, -0.12, 0], [3, 0.173333, 0]], [-0.1733, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.32, 0.84])
	keys.append([[0.342041, [3, -0.12, 0], [3, 0.173333, 0]], [0.225456, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.32, 0.84])
	keys.append([[1.44566, [3, -0.12, 0], [3, 0.173333, 0]], [1.15727, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.32, 0.84])
	keys.append([[-0.01845, [3, -0.12, 0], [3, 0.173333, 0]], [-0.107422, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.32, 0.84])
	keys.append([[-0.72409, [3, -0.12, 0], [3, 0.173333, 0]], [-0.122602, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.32, 0.84])
	keys.append([[-0.208583, [3, -0.12, 0], [3, 0.173333, 0]], [-0.0413762, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.32, 0.84])
	keys.append([[0.0767419, [3, -0.12, 0], [3, 0.173333, 0]], [0.119694, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.4, 0.92])
	keys.append([[1.23031, [3, -0.146667, 0], [3, 0.173333, 0]], [1.47197, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.4, 0.92])
	keys.append([[1.30846, [3, -0.146667, 0], [3, 0.173333, 0]], [0.858999, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.4, 0.92])
	keys.append([[0.674, [3, -0.146667, 0], [3, 0.173333, 0]], [0.44, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.32, 0.84])
	keys.append([[-0.0598679, [3, -0.12, 0], [3, 0.173333, 0]], [0.101202, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.32, 0.84])
	keys.append([[-0.06592, [3, -0.12, 0], [3, 0.173333, 0]], [-0.0904641, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.32, 0.84])
	keys.append([[-0.184038, [3, -0.12, 0], [3, 0.173333, 0]], [-0.1733, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.32, 0.84])
	keys.append([[0.408086, [3, -0.12, 0], [3, 0.173333, 0]], [0.073674, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.4, 0.92])
	keys.append([[1.47029, [3, -0.146667, 0], [3, 0.173333, 0]], [1.21349, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.4, 0.92])
	keys.append([[-0.0813439, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.00576587, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.4, 0.92])
	keys.append([[0.842125, [3, -0.146667, 0], [3, 0.173333, 0]], [0.229898, [3, -0.173333, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_2(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.52, 1.04])
	keys.append([[0.0398422, [3, -0.186667, 0], [3, 0.173333, 0]], [-0.073674, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.52, 1.04])
	keys.append([[0.0583338, [3, -0.186667, 0], [3, 0.173333, 0]], [0.0767419, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.44, 0.96])
	keys.append([[0.076658, [3, -0.16, 0], [3, 0.173333, 0]], [0.0352399, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.44, 0.96])
	keys.append([[-0.076658, [3, -0.16, 0], [3, 0.173333, 0]], [-0.095066, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.48, 0.96])
	keys.append([[-1.01862, [3, -0.173333, 0], [3, 0.16, 0]], [-1.32849, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.48, 0.96])
	keys.append([[-1.32073, [3, -0.173333, 0], [3, 0.16, 0]], [-0.990921, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.48, 0.96])
	keys.append([[0.686, [3, -0.173333, 0], [3, 0.16, 0]], [0.17, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.44, 0.96])
	keys.append([[0.182588, [3, -0.16, 0], [3, 0.173333, 0]], [0.291501, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.44, 0.96])
	keys.append([[0.0337899, [3, -0.16, 0], [3, 0.173333, 0]], [0.0782759, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.44, 0.96])
	keys.append([[-0.318715, [3, -0.16, 0], [3, 0.173333, 0]], [-0.307977, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.44, 0.96])
	keys.append([[-0.0874801, [3, -0.16, 0], [3, 0.173333, 0]], [-0.0874801, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.48, 0.96])
	keys.append([[1.38218, [3, -0.173333, 0], [3, 0.16, 0]], [1.39598, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.48, 0.96])
	keys.append([[-0.0674542, [3, -0.173333, 0], [3, 0.16, 0]], [-0.226893, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.48, 0.96])
	keys.append([[-0.970981, [3, -0.173333, 0], [3, 0.16, 0]], [-0.245399, [3, -0.16, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.44, 0.96])
	keys.append([[0.0798099, [3, -0.16, 0], [3, 0.173333, 0]], [0.0414601, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.44, 0.96])
	keys.append([[0.174919, [3, -0.16, 0], [3, 0.173333, 0]], [0.168782, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.56, 1])
	keys.append([[1.0891, [3, -0.2, 0], [3, 0.146667, 0]], [1.33454, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.56, 1])
	keys.append([[1.41746, [3, -0.2, 0], [3, 0.146667, 0]], [0.964928, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.56, 1])
	keys.append([[0.6972, [3, -0.2, 0], [3, 0.146667, 0]], [0.17, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.44, 0.96])
	keys.append([[0.164096, [3, -0.16, 0], [3, 0.173333, 0]], [0.292952, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.44, 0.96])
	keys.append([[-0.193243, [3, -0.16, 0], [3, 0.173333, 0]], [-0.190175, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.44, 0.96])
	keys.append([[-0.318715, [3, -0.16, 0], [3, 0.173333, 0]], [-0.307977, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.44, 0.96])
	keys.append([[-0.0827939, [3, -0.16, 0], [3, 0.173333, 0]], [-0.0827939, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.56, 1])
	keys.append([[1.37135, [3, -0.2, 0], [3, 0.146667, 0]], [1.36675, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.56, 1])
	keys.append([[0.021518, [3, -0.2, 0], [3, 0.146667, 0]], [0.226893, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.56, 1])
	keys.append([[0.788519, [3, -0.2, 0], [3, 0.146667, 0]], [0.24088, [3, -0.146667, 0], [3, 0, 0]]])
        return names,times,keys

    def motion_3(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([1, 1.2, 1.4, 2.04])
	keys.append([[-0.230143, [3, -0.346667, 0], [3, 0.0666667, 0]], [0.101202, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.230143, [3, -0.0666667, 0], [3, 0.213333, 0]], [-0.207132, [3, -0.213333, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.222472, [3, -0.28, 0], [3, 0.133333, 0]], [-0.139636, [3, -0.133333, -0.0194307], [3, 0.266667, 0.0388613]], [-0.047596, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.0674542, [3, -0.28, 0], [3, 0.133333, 0]], [-0.0966001, [3, -0.133333, 0], [3, 0.266667, 0]], [0.066004, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.52, 0.84, 1.6, 2.12])
	keys.append([[-1.50174, [3, -0.186667, 0], [3, 0.106667, 0]], [-0.819114, [3, -0.106667, 0], [3, 0.253333, 0]], [-1.54462, [3, -0.253333, 0], [3, 0.173333, 0]], [-1.27758, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.84, 2.12])
	keys.append([[-1.62608, [3, -0.293333, 0], [3, 0.426667, 0]], [-0.815069, [3, -0.426667, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.52, 0.84, 1.16, 1.6, 2.12])
	keys.append([[0.14, [3, -0.186667, 0], [3, 0.106667, 0]], [0.8, [3, -0.106667, 0], [3, 0.106667, 0]], [0.4844, [3, -0.106667, 0], [3, 0.146667, 0]], [0.69, [3, -0.146667, 0], [3, 0.173333, 0]], [0.04, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.0797259, [3, -0.28, 0], [3, 0.133333, 0]], [0.036858, [3, -0.133333, -0.0357933], [3, 0.266667, 0.0715867]], [0.242414, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.8, 1.2, 2])
	keys.append([[0.099752, [3, -0.28, 0], [3, 0.133333, 0]], [0.112024, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.0674542, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.283749, [3, -0.28, 0], [3, 0.133333, 0]], [-0.277612, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.31136, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.8, 1.2, 2])
	keys.append([[0.506179, [3, -0.28, 0], [3, 0.133333, 0]], [0.317496, [3, -0.133333, 0.050963], [3, 0.266667, -0.101926]], [0.0475121, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.52, 0.84, 1.16, 1.6, 2.12])
	keys.append([[1.07376, [3, -0.186667, 0], [3, 0.106667, 0]], [1.23176, [3, -0.106667, 0], [3, 0.106667, 0]], [1.1658, [3, -0.106667, 0.0445205], [3, 0.146667, -0.0612156]], [0.914553, [3, -0.146667, 0], [3, 0.173333, 0]], [1.12574, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.52, 0.84, 1.16, 1.6, 2.12])
	keys.append([[-0.165714, [3, -0.186667, 0], [3, 0.106667, 0]], [-0.092082, [3, -0.106667, -0.0155957], [3, 0.106667, 0.0155957]], [-0.07214, [3, -0.106667, -0.019942], [3, 0.146667, 0.0274202]], [0.122173, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.00872665, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.52, 0.84, 1.6, 2.12])
	keys.append([[-1.04009, [3, -0.186667, 0], [3, 0.106667, 0]], [-1.34689, [3, -0.106667, 0], [3, 0.253333, 0]], [-0.937242, [2, -0.211748, -0.297867], [2, 0.14488, 0.203802]], [0.391128, [3, -0.173333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.11194, [3, -0.28, 0], [3, 0.133333, 0]], [-0.0735901, [3, -0.133333, -0.0201125], [3, 0.266667, 0.0402249]], [0.0690719, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.8, 1.2, 2])
	keys.append([[0.04913, [3, -0.28, 0], [3, 0.133333, 0]], [0.0261199, [3, -0.133333, 0], [3, 0.266667, 0]], [0.113558, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.44, 0.76, 1.08, 1.6, 2.04])
	keys.append([[1.5233, [3, -0.16, 0], [3, 0.106667, 0]], [0.828401, [3, -0.106667, 0], [3, 0.106667, 0]], [1.17815, [2, -0.097912, -0.118312], [2, 0.159107, 0.192257]], [1.54462, [3, -0.173333, 0], [3, 0.146667, 0]], [1.27758, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.76, 1.08, 2.04])
	keys.append([[1.79781, [3, -0.266667, 0], [3, 0.106667, 0]], [1.66742, [3, -0.106667, 0.0818952], [3, 0.32, -0.245686]], [0.815069, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.44, 0.76, 1.08, 1.6, 2.04])
	keys.append([[0.14, [3, -0.16, 0], [3, 0.106667, 0]], [0.8, [3, -0.106667, 0], [3, 0.106667, 0]], [0.4812, [3, -0.106667, 0], [3, 0.173333, 0]], [0.69, [3, -0.173333, 0], [3, 0.146667, 0]], [0.04, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.0445281, [3, -0.28, 0], [3, 0.133333, 0]], [0.0367741, [3, -0.133333, -0.0296574], [3, 0.266667, 0.0593147]], [0.222388, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.8, 1.2, 2])
	keys.append([[0.0138481, [3, -0.28, 0], [3, 0.133333, 0]], [0.0261199, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.105804, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.8, 1.2, 2])
	keys.append([[-0.283749, [3, -0.28, 0], [3, 0.133333, 0]], [-0.277612, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.31136, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.8, 1.2, 2])
	keys.append([[0.351328, [3, -0.28, 0], [3, 0.133333, 0]], [0.236277, [3, -0.133333, 0.0448269], [3, 0.266667, -0.0896537]], [-0.052114, [3, -0.266667, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.44, 0.76, 1.08, 1.6, 2.04])
	keys.append([[1.09992, [3, -0.16, 0], [3, 0.106667, 0]], [1.28247, [3, -0.106667, 0], [3, 0.106667, 0]], [1.22417, [2, -0.106667, 0.0615412], [2, 0.173333, -0.100004]], [0.914553, [3, -0.173333, 0], [3, 0.146667, 0]], [1.12574, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.44, 0.76, 1.08, 1.6, 2.04])
	keys.append([[0.240796, [3, -0.16, 0], [3, 0.106667, 0]], [0.05058, [3, -0.106667, 0], [3, 0.106667, 0]], [0.101202, [3, -0.106667, 0], [3, 0.173333, 0]], [-0.122173, [3, -0.173333, 0], [3, 0.146667, 0]], [0.00872665, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.44, 0.76, 1.6, 2.04])
	keys.append([[1.00013, [3, -0.16, 0], [3, 0.106667, 0]], [1.37749, [3, -0.106667, 0], [3, 0.28, 0]], [0.937242, [2, -0.24605, 0.304188], [2, 0.128883, -0.159337]], [0.391128, [3, -0.146667, 0], [3, 0, 0]]])
        return names,times,keys

    def motion_4(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.08, 0.36, 0.64, 1.48, 1.76, 1.96, 2.2, 2.44])
	keys.append([[-0.0706061, [3, -0.04, 0], [3, 0.0933333, 0]], [0.15708, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0706061, [3, -0.0933333, 0], [3, 0.28, 0]], [-0.0706061, [3, -0.28, 0], [3, 0.0933333, 0]], [0.15708, [3, -0.0933333, 0], [3, 0.0666667, 0]], [-0.0706061, [3, -0.0666667, 0], [3, 0.08, 0]], [0.137881, [3, -0.08, 0], [3, 0.08, 0]], [-0.0706061, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[0.0291041, [3, -0.293333, 0], [3, 0.12, 0]], [0.0260359, [3, -0.12, 0], [3, 0.12, 0]], [0.0291041, [3, -0.12, -0.00103917], [3, 0.293333, 0.00254021]], [0.0367741, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([2.44])
	keys.append([[-0.1733, [3, -0.826667, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.52, 0.8, 1.12, 1.4, 2.44])
	keys.append([[-0.670316, [3, -0.186667, 0], [3, 0.0933333, 0]], [-0.904081, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.39619, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.703368, [3, -0.0933333, 0], [3, 0.346667, 0]], [-0.37272, [3, -0.346667, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.52, 1.12, 1.68, 2.44])
	keys.append([[-1.28553, [3, -0.186667, 0], [3, 0.2, 0]], [-1.14594, [3, -0.2, 0], [3, 0.186667, 0]], [-1.28553, [3, -0.186667, 0], [3, 0.253333, 0]], [-1.13213, [3, -0.253333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.64, 0.88, 1.2, 1.48, 1.76, 2.44])
	keys.append([[0.4776, [3, -0.226667, 0], [3, 0.08, 0]], [0.22, [3, -0.08, 0], [3, 0.106667, 0]], [0.78, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.31, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.4776, [3, -0.0933333, 0], [3, 0.226667, 0]], [0.4776, [3, -0.226667, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[0.362067, [3, -0.293333, 0], [3, 0.12, 0]], [-0.0551819, [3, -0.12, 0], [3, 0.12, 0]], [0.362067, [3, -0.12, 0], [3, 0.293333, 0]], [0.346725, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([2.44])
	keys.append([[0.214803, [3, -0.826667, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[-0.231591, [3, -0.293333, 0], [3, 0.12, 0]], [-0.300622, [3, -0.12, 0], [3, 0.12, 0]], [-0.231591, [3, -0.12, 0], [3, 0.293333, 0]], [-0.231591, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[-0.0874801, [3, -0.293333, 0], [3, 0.12, 0]], [0.170232, [3, -0.12, 0], [3, 0.12, 0]], [-0.0874801, [3, -0.12, 0], [3, 0.293333, 0]], [-0.0874801, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.52, 1.12, 1.68, 2.44])
	keys.append([[1.64287, [3, -0.186667, 0], [3, 0.2, 0]], [1.43271, [3, -0.2, 0], [3, 0.186667, 0]], [1.64287, [3, -0.186667, 0], [3, 0.253333, 0]], [1.44345, [3, -0.253333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.52, 1.12, 1.68, 2.44])
	keys.append([[0.13495, [3, -0.186667, 0], [3, 0.2, 0]], [0.076658, [3, -0.2, 0], [3, 0.186667, 0]], [0.13495, [3, -0.186667, 0], [3, 0.253333, 0]], [0.11194, [3, -0.253333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.52, 1.12, 1.4, 1.68, 2.44])
	keys.append([[-0.185656, [3, -0.186667, 0], [3, 0.2, 0]], [-1.17048, [3, -0.2, 0.229493], [3, 0.0933333, -0.107097]], [-1.27758, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.185656, [3, -0.0933333, -0.0141289], [3, 0.253333, 0.0383499]], [-0.147306, [3, -0.253333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[-0.00609397, [3, -0.293333, 0], [3, 0.12, 0]], [-0.0674542, [3, -0.12, 0], [3, 0.12, 0]], [-0.00609397, [3, -0.12, 0], [3, 0.293333, 0]], [-0.021434, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([2.44])
	keys.append([[-0.056716, [3, -0.826667, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.44, 0.72, 1, 1.32, 1.6, 2.44])
	keys.append([[0.598302, [3, -0.16, 0], [3, 0.0933333, 0]], [0.904081, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.39619, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.703368, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.598302, [2, -0.091906, 0.0379344], [2, 0.275717, -0.113803]], [0.398881, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.44, 1, 1.6, 2.44])
	keys.append([[1.19648, [3, -0.16, 0], [3, 0.186667, 0]], [1.14432, [3, -0.186667, 0], [3, 0.2, 0]], [1.19648, [3, -0.2, 0], [3, 0.28, 0]], [1.12745, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.52, 0.8, 1.12, 1.4, 1.68, 2.44])
	keys.append([[0.4508, [3, -0.186667, 0], [3, 0.0933333, 0]], [0.22, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.78, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.31, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.4508, [3, -0.0933333, 0], [3, 0.253333, 0]], [0.4508, [3, -0.253333, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[0.351244, [3, -0.293333, 0], [3, 0.12, 0]], [-0.0828778, [3, -0.12, 0], [3, 0.12, 0]], [0.351244, [3, -0.12, -0.00125521], [3, 0.293333, 0.00306829]], [0.354312, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([2.44])
	keys.append([[0.0890141, [3, -0.826667, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[-0.231591, [3, -0.293333, 0], [3, 0.12, 0]], [-0.300622, [3, -0.12, 0], [3, 0.12, 0]], [-0.231591, [3, -0.12, 0], [3, 0.293333, 0]], [-0.231591, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.84, 1.2, 1.56, 2.44])
	keys.append([[-0.052114, [3, -0.293333, 0], [3, 0.12, 0]], [0.283832, [3, -0.12, 0], [3, 0.12, 0]], [-0.052114, [3, -0.12, 0], [3, 0.293333, 0]], [-0.052114, [3, -0.293333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.44, 1, 1.6, 2.44])
	keys.append([[1.61074, [3, -0.16, 0], [3, 0.186667, 0]], [1.41592, [3, -0.186667, 0], [3, 0.2, 0]], [1.61074, [3, -0.2, 0], [3, 0.28, 0]], [1.4466, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.44, 1, 1.6, 2.44])
	keys.append([[-0.135034, [3, -0.16, 0], [3, 0.186667, 0]], [-0.0353239, [3, -0.186667, 0], [3, 0.2, 0]], [-0.135034, [3, -0.2, 0], [3, 0.28, 0]], [-0.119694, [3, -0.28, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.44, 1, 1.32, 1.6, 2.44])
	keys.append([[0.177901, [3, -0.16, 0], [3, 0.186667, 0]], [1.48334, [3, -0.186667, 0], [3, 0.106667, 0]], [1.27758, [3, -0.106667, 0.205755], [3, 0.0933333, -0.180036]], [0.177901, [3, -0.0933333, 0.0143171], [3, 0.28, -0.0429513]], [0.13495, [3, -0.28, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_5(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.64, 1.08, 1.52])
	keys.append([[0.176367, [3, -0.226667, 0], [3, 0.146667, 0]], [-0.174919, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.174919, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([0.64, 1.08, 1.52])
	keys.append([[0.0705221, [3, -0.226667, 0], [3, 0.146667, 0]], [-4.19617e-05, [3, -0.146667, 0], [3, 0.146667, 0]], [-4.19617e-05, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.273093, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.138102, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.142704, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([1.4])
	keys.append([[-0.133416, [3, -0.48, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([1, 1.44])
	keys.append([[-1.49254, [3, -0.346667, 0], [3, 0.146667, 0]], [-1.49254, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.52, 1, 1.44])
	keys.append([[-1.69646, [3, -0.186667, 0], [3, 0.16, 0]], [-0.846809, [3, -0.16, 0], [3, 0.146667, 0]], [-0.846809, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.24, 1, 1.44])
	keys.append([[0.53, [3, -0.0933333, 0], [3, 0.253333, 0]], [0.8312, [3, -0.253333, 0], [3, 0.146667, 0]], [0.6, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.0904641, [3, -0.186667, 0], [3, 0.146667, 0]], [0.0138481, [3, -0.146667, -0.0153398], [3, 0.146667, 0.0153398]], [0.0291878, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([1.4])
	keys.append([[0.154976, [3, -0.48, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.177901, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.187106, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.177901, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[0.484702, [3, -0.186667, 0], [3, 0.146667, 0]], [0.249999, [3, -0.146667, 0], [3, 0.146667, 0]], [0.271475, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([1, 1.44])
	keys.append([[0.931983, [3, -0.346667, 0], [3, 0.146667, 0]], [0.961654, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.52, 1, 1.44])
	keys.append([[0.193732, [2, -0.179742, 0.110704], [2, 0.154064, -0.0948892]], [-0.0690719, [3, -0.16, 0], [3, 0.146667, 0]], [-0.0690719, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.52, 1, 1.44])
	keys.append([[-0.596903, [3, -0.186667, 0], [3, 0.16, 0]], [-0.0521979, [3, -0.16, 0], [3, 0.146667, 0]], [-0.0521979, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.24233, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.0797259, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.102736, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([1.4])
	keys.append([[-0.0122299, [3, -0.48, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.96, 1.4])
	keys.append([[1.52177, [3, -0.333333, 0], [3, 0.146667, 0]], [1.52177, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.48, 0.96, 1.4])
	keys.append([[1.53938, [3, -0.173333, 0], [3, 0.16, 0]], [0.983252, [3, -0.16, 0], [3, 0.146667, 0]], [0.983252, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.48, 0.96, 1.4])
	keys.append([[0.86, [3, -0.173333, 0], [3, 0.16, 0]], [0.342, [3, -0.16, 0], [3, 0.146667, 0]], [0.342, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.151908, [3, -0.186667, 0], [3, 0.146667, 0]], [0.049046, [3, -0.146667, 0], [3, 0.146667, 0]], [0.0459781, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([1.4])
	keys.append([[0.067538, [3, -0.48, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[-0.177901, [3, -0.186667, 0], [3, 0.146667, 0]], [-0.187106, [3, -0.146667, 0], [3, 0.146667, 0]], [-0.177901, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.52, 0.96, 1.4])
	keys.append([[0.497058, [3, -0.186667, 0], [3, 0.146667, 0]], [0.159578, [3, -0.146667, 0], [3, 0.146667, 0]], [0.208666, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.96, 1.4])
	keys.append([[0.931983, [3, -0.333333, 0], [3, 0.146667, 0]], [0.961654, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.96, 1.4])
	keys.append([[0.095809, [3, -0.333333, 0], [3, 0.146667, 0]], [0.128814, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.48, 0.96, 1.4])
	keys.append([[0.596903, [3, -0.173333, 0], [3, 0.16, 0]], [-0.0521979, [3, -0.16, 0], [3, 0.146667, 0]], [-0.0521979, [3, -0.146667, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_6(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[-0.199447, [3, -0.2, 0], [3, 0.12, 0]], [-0.24975, [3, -0.12, 0], [3, 0.0666667, 0]], [0.0383972, [3, -0.0666667, 0], [3, 0.106667, 0]], [-0.233874, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.0366519, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.12913, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.0766945, [3, -0.173333, 0], [3, 0.12, 0]], [0.0918305, [3, -0.12, -0.00540429], [3, 0.0666667, 0.00300238]], [0.101914, [3, -0.0666667, 0], [3, 0.106667, 0]], [0.101914, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.101914, [3, -0.0666667, 0], [3, 0.0933333, 0]], [0.0916034, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.0743744, [3, -0.173333, 0], [3, 0.12, 0]], [-0.0899801, [3, -0.12, 0.00549532], [3, 0.0666667, -0.00305295]], [-0.100019, [3, -0.0666667, 0.00268], [3, 0.106667, -0.004288]], [-0.110884, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.110884, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.110884, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[-1.54152, [3, -0.226667, 0], [3, 0.12, 0]], [-1.54152, [3, -0.12, 0], [3, 0.0666667, 0]], [-1.54152, [3, -0.0666667, 0], [3, 0.106667, 0]], [-1.44375, [3, -0.106667, -0.0514212], [3, 0.0666667, 0.0321382]], [-1.29084, [3, -0.0666667, -0.0408674], [3, 0.0933333, 0.0572143]], [-1.14951, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[-1.18948, [3, -0.226667, 0], [3, 0.12, 0]], [-1.01033, [3, -0.12, -0.0480144], [3, 0.0666667, 0.0266747]], [-0.965408, [3, -0.0666667, 0], [3, 0.106667, 0]], [-1.04688, [3, -0.106667, 0], [3, 0.0666667, 0]], [-1.04688, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-1.04688, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[0.865834, [3, -0.226667, 0], [3, 0.12, 0]], [0.854073, [3, -0.12, 0.00477493], [3, 0.0666667, -0.00265274]], [0.843551, [3, -0.0666667, 0.00693243], [3, 0.106667, -0.0110919]], [0.8, [3, -0.106667, 0.043551], [3, 0.0666667, -0.0272194]], [0.592788, [3, -0.0666667, 0.0588075], [3, 0.0933333, -0.0823305]], [0.376586, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.13224, [3, -0.173333, 0], [3, 0.12, 0]], [0.0423754, [3, -0.12, 0.0292209], [3, 0.0666667, -0.0162338]], [-0.00412397, [3, -0.0666667, 0.0105407], [3, 0.106667, -0.0168651]], [-0.0398422, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.0345662, [3, -0.0666667, -0.0239221], [3, 0.0933333, 0.033491]], [0.132397, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.0313472, [3, -0.173333, 0], [3, 0.12, 0]], [0.0448106, [3, -0.12, 0], [3, 0.0666667, 0]], [0.0448106, [3, -0.0666667, 0], [3, 0.106667, 0]], [0.0556559, [3, -0.106667, -0.00523724], [3, 0.0666667, 0.00327328]], [0.0703422, [3, -0.0666667, -0.00391245], [3, 0.0933333, 0.00547742]], [0.0838255, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.17217, [3, -0.173333, 0], [3, 0.12, 0]], [-0.17217, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.18217, [3, -0.0666667, 0.00273815], [3, 0.106667, -0.00438104]], [-0.193527, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.193527, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.180703, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.0828396, [3, -0.173333, 0], [3, 0.12, 0]], [-0.0828396, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.0828396, [3, -0.0666667, 0], [3, 0.106667, 0]], [-0.0828396, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.0828396, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.0828396, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[1.39286, [3, -0.226667, 0], [3, 0.12, 0]], [1.23729, [3, -0.12, 0.0392063], [3, 0.0666667, -0.0217813]], [1.2099, [3, -0.0666667, 0], [3, 0.106667, 0]], [1.25943, [3, -0.106667, -0.0123487], [3, 0.0666667, 0.00771794]], [1.2701, [3, -0.0666667, -0.00451047], [3, 0.0933333, 0.00631466]], [1.2919, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[0.128563, [3, -0.226667, 0], [3, 0.12, 0]], [0.105838, [3, -0.12, 0.00787665], [3, 0.0666667, -0.00437591]], [0.0918054, [3, -0.0666667, 0.00774465], [3, 0.106667, -0.0123914]], [0.0454297, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.134857, [3, -0.0666667, -0.0231743], [3, 0.0933333, 0.032444]], [0.212284, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.64, 1, 1.2, 1.52, 1.72, 2])
	keys.append([[-0.366798, [3, -0.226667, 0], [3, 0.12, 0]], [-0.767362, [3, -0.12, 0.127013], [3, 0.0666667, -0.070563]], [-0.959528, [3, -0.0666667, 0.0465419], [3, 0.106667, -0.074467]], [-1.13039, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.683602, [3, -0.0666667, -0.143259], [3, 0.0933333, 0.200563]], [-0.0989207, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.0838159, [3, -0.173333, 0], [3, 0.12, 0]], [0.0977339, [3, -0.12, -0.0055546], [3, 0.0666667, 0.00308589]], [0.109737, [3, -0.0666667, 0], [3, 0.106667, 0]], [0.109737, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.0984168, [3, -0.0666667, 0.00331651], [3, 0.0933333, -0.00464312]], [0.0858585, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.157215, [3, -0.173333, 0], [3, 0.12, 0]], [0.130653, [3, -0.12, 0.00819488], [3, 0.0666667, -0.00455271]], [0.118972, [3, -0.0666667, 0], [3, 0.106667, 0]], [0.118972, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.118972, [3, -0.0666667, 0], [3, 0.0933333, 0]], [0.118972, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[1.50369, [3, -0.2, 0], [3, 0.12, 0]], [1.53167, [3, -0.12, 0], [3, 0.0666667, 0]], [1.53167, [3, -0.0666667, 0], [3, 0.106667, 0]], [1.1342, [3, -0.106667, 0.0983277], [3, 0.0666667, -0.0614548]], [1.05232, [3, -0.0666667, 0.0153759], [3, 0.0933333, -0.0215262]], [1.02349, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[1.19153, [3, -0.2, 0], [3, 0.12, 0]], [0.996394, [3, -0.12, 0.0495841], [3, 0.0666667, -0.0275467]], [0.960135, [3, -0.0666667, 0], [3, 0.106667, 0]], [1.02628, [3, -0.106667, -0.0165271], [3, 0.0666667, 0.0103294]], [1.0407, [3, -0.0666667, -0.00349041], [3, 0.0933333, 0.00488658]], [1.05141, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[0.618988, [3, -0.2, 0], [3, 0.12, 0]], [0.456782, [3, -0.12, 0.0538592], [3, 0.0666667, -0.0299218]], [0.367645, [3, -0.0666667, 0.0195713], [3, 0.106667, -0.0313141]], [0.304126, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.304126, [3, -0.0666667, 0], [3, 0.0933333, 0]], [0.304126, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[0.119026, [3, -0.173333, 0], [3, 0.12, 0]], [0.0441397, [3, -0.12, 0.0242135], [3, 0.0666667, -0.0134519]], [0.00602971, [3, -0.0666667, 0.00826778], [3, 0.106667, -0.0132285]], [-0.020349, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.0448721, [3, -0.0666667, -0.0209684], [3, 0.0933333, 0.0293557]], [0.130623, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.152361, [3, -0.173333, 0], [3, 0.12, 0]], [-0.110088, [3, -0.12, -0.0120535], [3, 0.0666667, 0.00669639]], [-0.0961113, [3, -0.0666667, -0.00331221], [3, 0.106667, 0.00529954]], [-0.0842526, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.0842526, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.0842526, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.17217, [3, -0.173333, 0], [3, 0.12, 0]], [-0.17217, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.18217, [3, -0.0666667, 0.00273815], [3, 0.106667, -0.00438104]], [-0.193527, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.193527, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.180703, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.48, 0.84, 1.04, 1.36, 1.56, 1.84])
	keys.append([[-0.0789128, [3, -0.173333, 0], [3, 0.12, 0]], [-0.0789128, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.0789128, [3, -0.0666667, 0], [3, 0.106667, 0]], [-0.0789128, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.0789128, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.0789128, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[1.27026, [3, -0.2, 0], [3, 0.12, 0]], [1.22335, [3, -0.12, 0.0122249], [3, 0.0666667, -0.00679162]], [1.21321, [3, -0.0666667, 0], [3, 0.106667, 0]], [1.29353, [3, -0.106667, -0.0269722], [3, 0.0666667, 0.0168576]], [1.3447, [3, -0.0666667, -0.0134558], [3, 0.0933333, 0.0188381]], [1.39042, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[-0.152328, [3, -0.2, 0], [3, 0.12, 0]], [-0.189133, [3, -0.12, 0.0111154], [3, 0.0666667, -0.00617522]], [-0.2042, [3, -0.0666667, 0], [3, 0.106667, 0]], [-0.2042, [3, -0.106667, 0], [3, 0.0666667, 0]], [-0.214939, [3, -0.0666667, 0], [3, 0.0933333, 0]], [-0.214939, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.56, 0.92, 1.12, 1.44, 1.64, 1.92])
	keys.append([[-0.380616, [3, -0.2, 0], [3, 0.12, 0]], [0.362683, [3, -0.12, -0.242019], [3, 0.0666667, 0.134455]], [0.748807, [3, -0.0666667, -0.0976277], [3, 0.106667, 0.156204]], [1.12418, [3, -0.106667, 0], [3, 0.0666667, 0]], [0.697461, [3, -0.0666667, 0.139932], [3, 0.0933333, -0.195905]], [0.116665, [3, -0.0933333, 0], [3, 0, 0]]])

        return names,times,keys


class Space(object):

    def __init__(self):
        pass

    def motion_1(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.6, 0.88, 1.24])
	keys.append([[-0.164061, [3, -0.213333, 0], [3, 0.0933333, 0]], [0.144862, [3, -0.0933333, 0], [3, 0.12, 0]], [-0.0244346, [3, -0.12, 0], [3, 0, 0]]])
	
	names.append("HeadYaw")
	times.append([1.24])
	keys.append([[0.133416, [3, -0.426667, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.0245859, [3, -0.2, 0], [3, 0.106667, 0]], [-0.00464392, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0107799, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.0889301, [3, -0.2, 0], [3, 0.106667, 0]], [-0.11194, [3, -0.106667, 0.00654506], [3, 0.0933333, -0.00572693]], [-0.125746, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.6, 0.92, 1.2])
	keys.append([[-1.23942, [3, -0.213333, 0], [3, 0.106667, 0]], [-0.912689, [3, -0.106667, -0.101993], [3, 0.0933333, 0.0892436]], [-0.665714, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.6, 0.92, 1.2])
	keys.append([[-1.47882, [3, -0.213333, 0], [3, 0.106667, 0]], [-1.08458, [3, -0.106667, 0], [3, 0.0933333, 0]], [-1.2027, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.6, 0.92, 1.2])
	keys.append([[0.44, [3, -0.213333, 0], [3, 0.106667, 0]], [0.548, [3, -0.106667, -0.0617244], [3, 0.0933333, 0.0540089]], [0.7872, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[0.395814, [3, -0.2, 0], [3, 0.106667, 0]], [0.282298, [3, -0.106667, 0.0286349], [3, 0.0933333, -0.0250555]], [0.234743, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.56, 0.88, 1.16])
	keys.append([[0.122762, [3, -0.2, 0], [3, 0.106667, 0]], [0.112024, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.122762, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.300622, [3, -0.2, 0], [3, 0.106667, 0]], [-0.309826, [3, -0.106667, 0.00272706], [3, 0.0933333, -0.00238618]], [-0.315962, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.075208, [3, -0.2, 0], [3, 0.106667, 0]], [-0.0429941, [3, -0.106667, -0.010363], [3, 0.0933333, 0.00906764]], [-0.016916, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.6, 0.92, 1.2])
	keys.append([[1.38976, [3, -0.213333, 0], [3, 0.106667, 0]], [1.36522, [3, -0.106667, 0.0103631], [3, 0.0933333, -0.0090677]], [1.33147, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LShoulderRoll")
	times.append([0.6, 0.92, 1.2])
	keys.append([[-0.00464057, [3, -0.213333, 0], [3, 0.106667, 0]], [-0.066004, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0521979, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("LWristYaw")
	times.append([0.6, 0.92, 1.2])
	keys.append([[-0.83914, [3, -0.213333, 0], [3, 0.106667, 0]], [-1.41746, [3, -0.106667, 0.0788909], [3, 0.0933333, -0.0690295]], [-1.48649, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.022968, [3, -0.2, 0], [3, 0.106667, 0]], [-0.0873961, [3, -0.106667, 0.0188171], [3, 0.0933333, -0.0164649]], [-0.128814, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.56, 0.88, 1.16])
	keys.append([[0.0813439, [3, -0.2, 0], [3, 0.106667, 0]], [0.0445281, [3, -0.106667, 0.0114538], [3, 0.0933333, -0.0100221]], [0.016916, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.52, 0.84, 1.16])
	keys.append([[0.960325, [3, -0.186667, 0], [3, 0.106667, 0]], [0.935783, [3, -0.106667, 0.00664737], [3, 0.106667, -0.00664737]], [0.920441, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RElbowYaw")
	times.append([0.52, 0.84, 1.16])
	keys.append([[1.68429, [3, -0.186667, 0], [3, 0.106667, 0]], [1.72878, [3, -0.106667, -0.0107376], [3, 0.106667, 0.0107376]], [1.74872, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.52, 0.84, 1.16])
	keys.append([[0.0372, [3, -0.186667, 0], [3, 0.106667, 0]], [0.1124, [3, -0.106667, -0.00719999], [3, 0.106667, 0.00719999]], [0.1196, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[0.401866, [3, -0.2, 0], [3, 0.106667, 0]], [0.23466, [3, -0.106667, 0.0458154], [3, 0.0933333, -0.0400885]], [0.144154, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.110406, [3, -0.2, 0], [3, 0.106667, 0]], [-0.0475121, [3, -0.106667, -0.012272], [3, 0.0933333, 0.010738]], [-0.0367741, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.300622, [3, -0.2, 0], [3, 0.106667, 0]], [-0.309826, [3, -0.106667, 0.00272706], [3, 0.0933333, -0.00238618]], [-0.315962, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.56, 0.88, 1.16])
	keys.append([[-0.06592, [3, -0.2, 0], [3, 0.106667, 0]], [0.090548, [3, -0.106667, -0.0479972], [3, 0.0933333, 0.0419975]], [0.204064, [3, -0.0933333, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.52, 0.84, 1.16])
	keys.append([[1.75341, [3, -0.186667, 0], [3, 0.106667, 0]], [1.73346, [3, -0.106667, 0], [3, 0.106667, 0]], [1.75341, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.52, 0.84, 1.16])
	keys.append([[-0.036858, [3, -0.186667, 0], [3, 0.106667, 0]], [-0.0828778, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.0245859, [3, -0.106667, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.52, 0.84, 1.16])
	keys.append([[-0.11049, [3, -0.186667, 0], [3, 0.106667, 0]], [0.202446, [3, -0.106667, -0.0276111], [3, 0.106667, 0.0276111]], [0.230057, [3, -0.106667, 0], [3, 0, 0]]])

        return names,times,keys

    def motion_2(self):
	names = list()
	times = list()
	keys = list()
	
	names.append("HeadPitch")
	times.append([0.64, 0.8, 1.04])
	keys.append([[-0.118682, [3, -0.226667, 0], [3, 0.0533333, 0]], [0.0872665, [3, -0.0533333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0, 0]]])
	
	names.append("LAnklePitch")
	times.append([0.68])
	keys.append([[-0.0496523, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LAnkleRoll")
	times.append([0.68])
	keys.append([[0.0770189, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LElbowRoll")
	times.append([0.92])
	keys.append([[-0.876155, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("LElbowYaw")
	times.append([0.92])
	keys.append([[-1.89019, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("LHand")
	times.append([0.92])
	keys.append([[1, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("LHipPitch")
	times.append([0.68])
	keys.append([[0.359314, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LHipRoll")
	times.append([0.68])
	keys.append([[-0.133255, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LHipYawPitch")
	times.append([0.68])
	keys.append([[-0.236319, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LKneePitch")
	times.append([0.68])
	keys.append([[-0.0833201, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("LShoulderPitch")
	times.append([0.48, 0.92])
	keys.append([[0.555015, [3, -0.173333, 0], [3, 0.146667, 0]], [0.79587, [3, -0.146667, 0], [3, 0, 0]]])
	
	names.append("RAnklePitch")
	times.append([0.68])
	keys.append([[0.0519679, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RAnkleRoll")
	times.append([0.68])
	keys.append([[0.245997, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RElbowRoll")
	times.append([0.92])
	keys.append([[0.319395, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RHand")
	times.append([0.92])
	keys.append([[0.65, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RHipPitch")
	times.append([0.68])
	keys.append([[0.30692, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RHipRoll")
	times.append([0.68])
	keys.append([[-0.297483, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RHipYawPitch")
	times.append([0.68])
	keys.append([[-0.236319, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RKneePitch")
	times.append([0.68])
	keys.append([[-0.0917307, [3, -0.24, 0], [3, 0, 0]]])
	
	names.append("RShoulderPitch")
	times.append([0.92])
	keys.append([[1.4556, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RShoulderRoll")
	times.append([0.92])
	keys.append([[0.0959931, [3, -0.32, 0], [3, 0, 0]]])
	
	names.append("RWristYaw")
	times.append([0.92])
	keys.append([[-0.221657, [3, -0.32, 0], [3, 0, 0]]])

        return names,times,keys
